<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Blog.Core.Common</name>
    </assembly>
    <members>
        <member name="T:Blog.Core.Common.Attributes.CachingAttribute">
            <summary>
            这个Attribute就是使用时候的验证，把它添加到要缓存数据的方法中，即可完成缓存的操作。
            </summary>
        </member>
        <member name="P:Blog.Core.Common.Attributes.CachingAttribute.AbsoluteExpiration">
            <summary>
            缓存绝对过期时间
            </summary>
        </member>
        <member name="T:Blog.Core.Common.Helper.Appsettings">
            <summary>
            appsettings.json操作类
            </summary>
        </member>
        <member name="M:Blog.Core.Common.Helper.Appsettings.app(System.String[])">
            <summary>
            封装要操作的字符
            </summary>
            <param name="sections"></param>
            <returns></returns>
        </member>
        <member name="M:Blog.Core.Common.Helper.SerializeHelper.Serialize(System.Object)">
            <summary>
            序列化
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Blog.Core.Common.Helper.SerializeHelper.Deserialize``1(System.Byte[])">
            <summary>
            反序列化
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Blog.Core.Common.Redis.IRedisCacheManager.Get``1(System.String)">
            <summary>
            获取
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Blog.Core.Common.Redis.IRedisCacheManager.Set(System.String,System.Object,System.TimeSpan)">
            <summary>
            设置
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <param name="chacheTime"></param>
        </member>
        <member name="M:Blog.Core.Common.Redis.IRedisCacheManager.Get(System.String)">
            <summary>
            判断是否存在
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Blog.Core.Common.Redis.IRedisCacheManager.Remove(System.String)">
            <summary>
            移除
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:Blog.Core.Common.Redis.IRedisCacheManager.Clear">
            <summary>
            清除
            </summary>
        </member>
        <member name="F:Blog.Core.Common.Redis.RedisCacheManager.redisConnection">
            <summary>
            
            </summary>
        </member>
        <member name="M:Blog.Core.Common.Redis.RedisCacheManager.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Blog.Core.Common.Redis.RedisCacheManager.GetRedisConnection">
            <summary>
            核心代码，获取连接实例
            通过双if 夹lock的方式，实现单例模式
            </summary>
            <returns></returns>
        </member>
        <member name="M:Blog.Core.Common.Redis.RedisCacheManager.Clear">
            <summary>
            清除
            </summary>
        </member>
        <member name="M:Blog.Core.Common.Redis.RedisCacheManager.Get``1(System.String)">
            <summary>
            获取
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Blog.Core.Common.Redis.RedisCacheManager.Get(System.String)">
            <summary>
            判断是否存在
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Blog.Core.Common.Redis.RedisCacheManager.Remove(System.String)">
            <summary>
            移除
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:Blog.Core.Common.Redis.RedisCacheManager.Set(System.String,System.Object,System.TimeSpan)">
            <summary>
            设置
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <param name="chacheTime"></param>
        </member>
    </members>
</doc>
