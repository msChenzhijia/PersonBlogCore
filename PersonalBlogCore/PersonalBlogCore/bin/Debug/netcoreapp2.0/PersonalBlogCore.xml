<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PersonalBlogCore</name>
    </assembly>
    <members>
        <member name="T:PersonalBlogCore.AuthHelper.OverWrite.JwtHelper">
            <summary>
            
            </summary>
        </member>
        <member name="P:PersonalBlogCore.AuthHelper.OverWrite.JwtHelper.secretKey">
            <summary>
            
            </summary>
        </member>
        <member name="M:PersonalBlogCore.AuthHelper.OverWrite.JwtHelper.IssueJWT(Blog.Core.Model.TokenModelJWT)">
            <summary>
            颁发JWT字符串
            </summary>
            <param name="tokenModelJWT"></param>
            <returns></returns>
        </member>
        <member name="M:PersonalBlogCore.AuthHelper.OverWrite.JwtHelper.SerializeJWT(System.String)">
            <summary>
            解析
            </summary>
            <param name="jwtStr"></param>
            <returns></returns>
        </member>
        <member name="T:PersonalBlogCore.AuthHelper.OverWrite.JwtTokenAuth">
            <summary>
            
            </summary>
        </member>
        <member name="F:PersonalBlogCore.AuthHelper.OverWrite.JwtTokenAuth._next">
            <summary>
            
            </summary>
        </member>
        <member name="M:PersonalBlogCore.AuthHelper.OverWrite.JwtTokenAuth.#ctor(Microsoft.AspNetCore.Http.RequestDelegate)">
            <summary>
            
            </summary>
            <param name="next"></param>
        </member>
        <member name="M:PersonalBlogCore.AuthHelper.OverWrite.JwtTokenAuth.Invoke(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            
            </summary>
            <param name="httpContext"></param>
            <returns></returns>
        </member>
        <member name="T:PersonalBlogCore.Controllers.BlogController">
            <summary>
            
            </summary>
        </member>
        <member name="M:PersonalBlogCore.Controllers.BlogController.Get(System.Int32,System.Int32)">
            <summary>
            Sum接口
            </summary>
            <param name="i">参数i</param>
            <param name="j">参数j</param>
            <returns></returns>
        </member>
        <member name="M:PersonalBlogCore.Controllers.BlogController.Get(System.Int32)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:PersonalBlogCore.Controllers.BlogController.Post(System.String)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:PersonalBlogCore.Controllers.BlogController.Put(System.Int32,System.String)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <param name="value"></param>
        </member>
        <member name="M:PersonalBlogCore.Controllers.BlogController.Delete(System.Int32)">
            <summary>
            
            </summary>
            <param name="id"></param>
        </member>
        <member name="T:PersonalBlogCore.Controllers.LoginController">
            <summary>
            
            </summary>
        </member>
        <member name="M:PersonalBlogCore.Controllers.LoginController.GetJWTStr(System.Int64,System.String)">
            <summary>
            获取JWT的重写方法，推荐这种，注意在文件夹OverWrite下
            </summary>
            <param name="id">id</param>
            <param name="sub">角色</param>
            <returns></returns>
        </member>
        <member name="M:PersonalBlogCore.Controllers.LoginController.GetJsonp(System.String,System.Int64,System.String,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="callBack"></param>
            <param name="id"></param>
            <param name="sub"></param>
            <param name="expiresSliding"></param>
            <param name="expiresAbsoulute"></param>
        </member>
        <member name="T:PersonalBlogCore.Program">
            <summary>
            
            </summary>
        </member>
        <member name="M:PersonalBlogCore.Program.Main(System.String[])">
            <summary>
            
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:PersonalBlogCore.Program.BuildWebHost(System.String[])">
            <summary>
            
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:PersonalBlogCore.Startup">
            <summary>
            
            </summary>
        </member>
        <member name="M:PersonalBlogCore.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="P:PersonalBlogCore.Startup.Configuration">
            <summary>
            
            </summary>
        </member>
        <member name="M:PersonalBlogCore.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:PersonalBlogCore.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IHostingEnvironment)">
            <summary>
            
            </summary>
            <param name="app"></param>
            <param name="env"></param>
        </member>
    </members>
</doc>
